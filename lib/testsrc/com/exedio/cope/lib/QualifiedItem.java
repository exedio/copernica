
package com.exedio.cope.lib;

import com.exedio.cope.lib.pattern.Qualifier;

/**
 * @persistent
 */
public class QualifiedItem extends Item
{
	static final IntegerAttribute number = integerAttribute(DEFAULT);
	
	static final Qualifier qualifier = new Qualifier(QualifiedEmptyQualifier.qualifyUnique);


/**

	 **
	 * Creates a new QualifiedItem with all the attributes initially needed.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public QualifiedItem()
	{
		super(new com.exedio.cope.lib.AttributeValue[]{
		});
	}/**

	 **
	 * Creates a new QualifiedItem and sets the given attributes initially.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */protected QualifiedItem(final com.exedio.cope.lib.AttributeValue[] initialAttributes)
	{
		super(initialAttributes);
	}/**

	 **
	 * Reactivation constructor. Used for internal purposes only.
	 * <p><small>Generated by the cope instrumentor.</small>
	 * @see Item#Item(com.exedio.cope.lib.util.ReactivationConstructorDummy,int)
	 *
 */private QualifiedItem(com.exedio.cope.lib.util.ReactivationConstructorDummy d,final int pk)
	{
		super(d,pk);
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #number}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final java.lang.Integer getNumber()
	{
		return (java.lang.Integer)getAttribute(QualifiedItem.number);
	}/**

	 **
	 * Sets a new value for the persistent attribute {@link #number}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final void setNumber(final java.lang.Integer number)
	{
		try
		{
			setAttribute(QualifiedItem.number,number);
		}
		catch(com.exedio.cope.lib.LengthViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.NotNullViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.ReadOnlyViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.UniqueViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
	}/**

	 **
	 * Returns the qualifier.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final QualifiedEmptyQualifier getQualifier(final EmptyItem key)
	{
		return (QualifiedEmptyQualifier)QualifiedEmptyQualifier.qualifyUnique.searchUnique(new Object[]{this,key});
	}/**

	 **
	 * Returns the qualifier.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final java.lang.String getQualifiedA(final EmptyItem key)
	{
		return (java.lang.String)QualifiedEmptyQualifier.qualifyUnique.getQualified(new Object[]{this,key},QualifiedEmptyQualifier.qualifiedA);
	}/**

	 **
	 * Sets the qualifier.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final void setQualifiedA(final EmptyItem key,final java.lang.String qualifiedA)
			throws
				com.exedio.cope.lib.NotNullViolationException,
				com.exedio.cope.lib.LengthViolationException,
				com.exedio.cope.lib.ReadOnlyViolationException,
				java.lang.ClassCastException
	{
		QualifiedEmptyQualifier.qualifyUnique.setQualified(new Object[]{this,key},QualifiedEmptyQualifier.qualifiedA,qualifiedA);
	}/**

	 **
	 * Returns the qualifier.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final java.lang.String getQualifiedB(final EmptyItem key)
	{
		return (java.lang.String)QualifiedEmptyQualifier.qualifyUnique.getQualified(new Object[]{this,key},QualifiedEmptyQualifier.qualifiedB);
	}/**

	 **
	 * Sets the qualifier.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final void setQualifiedB(final EmptyItem key,final java.lang.String qualifiedB)
			throws
				com.exedio.cope.lib.NotNullViolationException,
				com.exedio.cope.lib.LengthViolationException,
				com.exedio.cope.lib.ReadOnlyViolationException,
				java.lang.ClassCastException
	{
		QualifiedEmptyQualifier.qualifyUnique.setQualified(new Object[]{this,key},QualifiedEmptyQualifier.qualifiedB,qualifiedB);
	}/**

	 **
	 * The persistent type information for qualifiedItem.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public static final com.exedio.cope.lib.Type TYPE = 
		new com.exedio.cope.lib.Type(QualifiedItem.class)
;}
