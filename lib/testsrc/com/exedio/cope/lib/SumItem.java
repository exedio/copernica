package com.exedio.cope.lib;

import com.exedio.cope.lib.function.SumFunction;

/**
 * @persistent
 */
public class SumItem extends Item
{
	static final IntegerAttribute num1 = new IntegerAttribute(NOT_NULL);

	static final IntegerAttribute num2 = new IntegerAttribute(NOT_NULL);

	static final IntegerAttribute num3 = new IntegerAttribute(NOT_NULL);
	
	static final SumFunction sum12 = new SumFunction(num1, num2);

/**

	 **
	 * Constructs a new SumItem with all the attributes initially needed.
	 * <p><small>Generated by the cope instrumentor.</small>
	 * @param initialNum1 the initial value for attribute {@link #num1}.
	 * @param initialNum2 the initial value for attribute {@link #num2}.
	 * @param initialNum3 the initial value for attribute {@link #num3}.
	 *
 */SumItem(
				final int initialNum1,
				final int initialNum2,
				final int initialNum3)
	{
		super(new com.exedio.cope.lib.AttributeValue[]{
			new com.exedio.cope.lib.AttributeValue(num1,new Integer(initialNum1)),
			new com.exedio.cope.lib.AttributeValue(num2,new Integer(initialNum2)),
			new com.exedio.cope.lib.AttributeValue(num3,new Integer(initialNum3)),
		});
	}/**

	 **
	 * Reactivation constructor. Used for internal purposes only.
	 * <p><small>Generated by the cope instrumentor.</small>
	 * @see Item#Item(com.exedio.cope.lib.util.ReactivationConstructorDummy,int)
	 *
 */private SumItem(com.exedio.cope.lib.util.ReactivationConstructorDummy d,final int pk)
	{
		super(d,pk);
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #num1}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final int getNum1()
	{
		return ((Integer)getAttribute(this.num1)).intValue();
	}/**

	 **
	 * Sets a new value for the persistent attribute {@link #num1}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final void setNum1(final int num1)
	{
		try
		{
			setAttribute(this.num1,new Integer(num1));
		}
		catch(com.exedio.cope.lib.LengthViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
		catch(com.exedio.cope.lib.NotNullViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
		catch(com.exedio.cope.lib.ReadOnlyViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
		catch(com.exedio.cope.lib.UniqueViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #num2}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final int getNum2()
	{
		return ((Integer)getAttribute(this.num2)).intValue();
	}/**

	 **
	 * Sets a new value for the persistent attribute {@link #num2}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final void setNum2(final int num2)
	{
		try
		{
			setAttribute(this.num2,new Integer(num2));
		}
		catch(com.exedio.cope.lib.LengthViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
		catch(com.exedio.cope.lib.NotNullViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
		catch(com.exedio.cope.lib.ReadOnlyViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
		catch(com.exedio.cope.lib.UniqueViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #num3}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final int getNum3()
	{
		return ((Integer)getAttribute(this.num3)).intValue();
	}/**

	 **
	 * Sets a new value for the persistent attribute {@link #num3}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final void setNum3(final int num3)
	{
		try
		{
			setAttribute(this.num3,new Integer(num3));
		}
		catch(com.exedio.cope.lib.LengthViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
		catch(com.exedio.cope.lib.NotNullViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
		catch(com.exedio.cope.lib.ReadOnlyViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
		catch(com.exedio.cope.lib.UniqueViolationException e)
		{
			throw new com.exedio.cope.lib.SystemException(e);
		}
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #sum12}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */final Integer getSum12()
	{
		return (Integer)getAttribute(this.sum12);
	}/**

	 **
	 * The persistent type information for sumItem.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public static final com.exedio.cope.lib.Type TYPE = 
		new com.exedio.cope.lib.Type(SumItem.class)
;}
