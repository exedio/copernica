
package com.exedio.cope.testmodel;

import com.exedio.cope.lib.AttributeValue;
import com.exedio.cope.lib.IntegerAttribute;
import com.exedio.cope.lib.Item;
import com.exedio.cope.lib.function.SumFunction;

/**
 * @persistent
 */
public class SumItem extends Item
{
	public static final IntegerAttribute num1 = integerAttribute(DEFAULT);

	public static final IntegerAttribute num2 = integerAttribute(DEFAULT);

	public static final IntegerAttribute num3 = integerAttribute(DEFAULT);
	
	public static final SumFunction sum12 = new SumFunction(num1, num2);

	public static final SumFunction sum13 = new SumFunction(num1, num3);

	public static final SumFunction sum23 = new SumFunction(num2, num3);

	public static final SumFunction sum123 = new SumFunction(num1, num2, num3);

	public static final SumFunction sum12a3 = new SumFunction(sum12, num3);

	public SumItem(final int initialNum1, final int initialNum2, final int initialNum3)
	{
		super(new AttributeValue[]{
			new AttributeValue(num1,new Integer(initialNum1)),
			new AttributeValue(num2,new Integer(initialNum2)),
			new AttributeValue(num3,new Integer(initialNum3)),
		});
	}

/**

	 **
	 * Creates a new SumItem with all the attributes initially needed.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public SumItem()
	{
		this(new com.exedio.cope.lib.AttributeValue[]{
		});
	}/**

	 **
	 * Creates a new SumItem and sets the given attributes initially.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */private SumItem(final com.exedio.cope.lib.AttributeValue[] initialAttributes)
	{
		super(initialAttributes);
	}/**

	 **
	 * Reactivation constructor. Used for internal purposes only.
	 * <p><small>Generated by the cope instrumentor.</small>
	 * @see Item#Item(com.exedio.cope.lib.util.ReactivationConstructorDummy,int)
	 *
 */private SumItem(com.exedio.cope.lib.util.ReactivationConstructorDummy d,final int pk)
	{
		super(d,pk);
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #num1}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final java.lang.Integer getNum1()
	{
		return (java.lang.Integer)getAttribute(SumItem.num1);
	}/**

	 **
	 * Sets a new value for the persistent attribute {@link #num1}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final void setNum1(final java.lang.Integer num1)
	{
		try
		{
			setAttribute(SumItem.num1,num1);
		}
		catch(com.exedio.cope.lib.LengthViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.NotNullViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.ReadOnlyViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.UniqueViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #num2}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final java.lang.Integer getNum2()
	{
		return (java.lang.Integer)getAttribute(SumItem.num2);
	}/**

	 **
	 * Sets a new value for the persistent attribute {@link #num2}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final void setNum2(final java.lang.Integer num2)
	{
		try
		{
			setAttribute(SumItem.num2,num2);
		}
		catch(com.exedio.cope.lib.LengthViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.NotNullViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.ReadOnlyViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.UniqueViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #num3}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final java.lang.Integer getNum3()
	{
		return (java.lang.Integer)getAttribute(SumItem.num3);
	}/**

	 **
	 * Sets a new value for the persistent attribute {@link #num3}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final void setNum3(final java.lang.Integer num3)
	{
		try
		{
			setAttribute(SumItem.num3,num3);
		}
		catch(com.exedio.cope.lib.LengthViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.NotNullViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.ReadOnlyViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
		catch(com.exedio.cope.lib.UniqueViolationException e)
		{
			throw new com.exedio.cope.lib.NestingRuntimeException(e);
		}
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #sum12}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final java.lang.Integer getSum12()
	{
		return (java.lang.Integer)getAttribute(SumItem.sum12);
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #sum13}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final java.lang.Integer getSum13()
	{
		return (java.lang.Integer)getAttribute(SumItem.sum13);
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #sum23}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final java.lang.Integer getSum23()
	{
		return (java.lang.Integer)getAttribute(SumItem.sum23);
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #sum123}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final java.lang.Integer getSum123()
	{
		return (java.lang.Integer)getAttribute(SumItem.sum123);
	}/**

	 **
	 * Returns the value of the persistent attribute {@link #sum12a3}.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public final java.lang.Integer getSum12a3()
	{
		return (java.lang.Integer)getAttribute(SumItem.sum12a3);
	}/**

	 **
	 * The persistent type information for sumItem.
	 * <p><small>Generated by the cope instrumentor.</small>
	 *
 */public static final com.exedio.cope.lib.Type TYPE = 
		new com.exedio.cope.lib.Type(SumItem.class)
;}
