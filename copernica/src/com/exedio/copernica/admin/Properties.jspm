<%
/*
 * Copyright (C) 2004-2005  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.copernica.admin;

import java.io.File;
import java.io.IOException;
import java.io.PrintStream;
import java.util.HashMap;
import java.util.Iterator;
import java.util.TreeSet;

import com.exedio.cope.Properties;

final class Properties_Jspm
{
	private static final String[] systemProperties = new String[]{
			"java.runtime.version",
			"java.class.path",
			"java.version",
			"java.vm.name",
			"java.vm.info",
			"java.vm.version",
			"user.name",
			"user.dir",
			"user.home",
			"user.language",
			"os.name",
			"os.arch",
			"os.version",
		};
	
	final static void write(
				final PrintStream out,
				final Properties properties,
				final String sourceContent)
		throws IOException
	{
		%>
		<table class="properties">
			<tr>
				<th colspan="2"><%=properties.getSource()%></th>
			</tr>
			<tr>
				<th><%=properties.DATABASE%></th>
				<td><%=properties.getDatabase()%></td>
			</tr>
			<tr>
				<th><%=properties.DATABASE_URL%></th>
				<td><%=properties.getDatabaseUrl()%></td>
			</tr>
			<tr>
				<th><%=properties.DATABASE_USER%></th>
				<td><%=properties.getDatabaseUser()%></td>
			</tr>
			<tr>
				<th><%=properties.DATABASE_DONT_SUPPORT_EMPTY_STRINGS%></th>
				<td><%=properties.getDatabaseDontSupportEmptyStrings()%></td>
			</tr>
			<tr>
				<th><%=properties.DATADIR_PATH%></th>
				<td><%
				if(properties.hasDatadirPath())
				{
					final File datadir = properties.getDatadirPath();
					%>
					<a href="<%=
							datadir.toURL().toString()%>"><%=
							datadir.getAbsolutePath()%></a>
					<br>
					<small>
					(link works only if the server is running locally).
					</small>
				<%
				}
				else
				{
					%><b>n/a</b><%
				}
				%></td>
			</tr>
			<tr>
				<th><%=properties.MEDIA_ROOT_URL%></th>
				<td>
					<%=properties.getMediaRootUrl()%>
					<br>
					<small>
					(default is &quot;<%=properties.MEDIA_ROOT_URL_DEFAULT%>&quot;)
					</small>
				</td>
			</tr><%

			if(sourceContent!=null)
			{
			%>
			<tr>
				<td colspan="2">
					<pre>
<%=sourceContent%>
					</pre>
				</td>
			</tr><%
			}
		%>
		</table><%
	}

	final static void writeDatabaseInfo(final PrintStream out, final java.util.Properties properties)
		throws IOException
	{
		%>
		<table class="properties">
			<tr>
				<th colspan="2">Connection.getMetaData()</th>
			</tr><%

			for(Iterator i = new TreeSet(properties.keySet()).iterator(); i.hasNext(); )
			{
				final String name = (String)i.next();
			%>
			<tr>
				<th><%=name%></th>
				<td><%=properties.getProperty(name)%></td>
			</tr><%
			}
			%>
		</table><%
	}

	private static final String[] TEST_INFO_KEYS = new String[] {
			"name",
			"database.name",
			"database.version",
			"driver.name",
			"driver.version",
			"cope.properties",
		};

	final static void writeTestInfo(final PrintStream out, final java.util.Properties current, final HashMap[] properties)
		throws IOException
	{
		%>
		<hr>
		<table class="properties">
			<tr>
				<th colspan="<%=TEST_INFO_KEYS.length%>">testprotocol.properties</th>
			</tr>
			<tr><%
				for(int j = 0; j<TEST_INFO_KEYS.length; j++)
				{
				%>
				<th><%=TEST_INFO_KEYS[j]%></th><%
				}
				%>
			</tr><%

			for(int i = 0; i<properties.length; i++)
			{
				final HashMap db = properties[i];
			%>
			<tr><%
				for(int j = 0; j<TEST_INFO_KEYS.length; j++)
				{
					final String key = TEST_INFO_KEYS[j];
					final String value = (String)db.get(key);
					int rowspan = properties.length - i;
					for(int k = i+1; k<properties.length; k++)
					{
						if(!value.equals(properties[k].get(key)))
						{
							rowspan = k - i;
							break;
						}
					}
					if(rowspan<=0)
						throw new RuntimeException();

					if(i==0 || !value.equals(properties[i-1].get(key)))
					{
				%>
				<td<% 
					if(rowspan!=1){ %> rowspan="<%=rowspan%>"<% }
					if(value.equals(current.get(key))){ %> bgcolor="#cff"<% }
					%>><%=value%></td><%
					}
				}
				%>
			</tr><%
			}
			%>
		</table><%
	}

	final static void write(final PrintStream out, final String key, String value)
		throws IOException
	{
		if(value!=null)
		{
			%>
			<tr>
				<th><%=key%></th>
				<td><%=value%></td>
			</tr><%
		}
	}

	final static void write(final PrintStream out, final Package thePackage)
		throws IOException
	{
			%>
			<tr>
				<th colspan="2"><%=thePackage.getName()%></th>
			</tr><%
			write(out, "specification.title", thePackage.getSpecificationTitle());
			write(out, "specification.version", thePackage.getSpecificationVersion());
			write(out, "specification.vendor", thePackage.getSpecificationVendor());
			write(out, "implementation.title", thePackage.getImplementationTitle());
			write(out, "implementation.version", thePackage.getImplementationVersion());
			write(out, "implementation.vendor", thePackage.getImplementationVendor());
	}

	final static void writeVm(final PrintStream out, final VmCop cop, final Package[] packages)
		throws IOException
	{
		%>
		<table class="properties">
			<tr>
				<th colspan="2">System.getProperty()</th>
			</tr><%

			for(int i = 0; i<systemProperties.length; i++)
			{
				final String name = systemProperties[i];
			%>
			<tr>
				<th><%=name%></th>
				<td><%=System.getProperty(name)%></td>
			</tr><%
			}
			%>
			<tr>
				<th colspan="2"><a href="<%=cop.toToggleAllPackages()%>"><%if(cop.allPackages){%>hide<%}else{%>show<%}%> none-cope</a></th>
			</tr><%

			for(int i = 0; i<packages.length; i++)
				write(out, packages[i]);
			%>
		</table><%
	}
}
%>