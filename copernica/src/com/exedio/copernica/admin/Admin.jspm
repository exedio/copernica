<%
/*
 * Copyright (C) 2004-2005  exedio GmbH (www.exedio.com)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

package com.exedio.copernica.admin;

import java.io.IOException;
import java.io.PrintStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;

import com.exedio.cope.Model;
import com.exedio.cope.util.PoolCounter;

final class Admin_Jspm
{
	static final void write(
				final PrintStream out,
				final HttpServletRequest request,
				final Model model)
		throws IOException
	{
		final AdminCop cop = AdminCop.getCop(request);
%>
<html>
	<head>
		<meta http-equiv="content-type" content="text/html; charset=<%=AdminServlet.ENCODING%>">
		<title>
			Copernica - Database Administration
		</title>
		<link rel="STYLESHEET" type="text/css" href="admin.css"><%
		cop.writeHead(out);
		%>
	</head>
	<body>
		<h1>Copernica</h1>
		<h2>Generic Backoffice for COPE</h2>
		<h3>Database Administration</h3>

		<form action="<%=cop%>" method="POST">
			Database:
			<br>
			<input type="submit" name="CREATE" value="create" />
			<input type="submit" name="TEARDOWN" value="tear down"/>
			<input type="submit" name="DROP" value="drop"/>
			<br>
			<%
				if(request.getParameter("CREATE")!=null)
				{
					model.createDatabase();
					%><div class="message">Database successfully created!</div><%
				}
				else if(request.getParameter("TEARDOWN")!= null)
				{
					model.tearDownDatabase();
					%><div class="message">Database successfully torn down!</div><%
				}
				else if(request.getParameter("DROP")!=null)
				{
					model.dropDatabase();
					%><div class="message">Database successfully dropped!</div><%
				}
				else if(request.getParameter("APPLY")!=null)
				{
					%><hr><%
					Report_Jspm.writeApply(out, request, model);
				}
			%>
			<p><%
			
			final AdminCop[] tabs = new AdminCop[]{
				cop.toProperties(),
				cop.toReport(),
				cop.toStatistics(),
			};
			for(int i = 0; i<tabs.length; i++)
			{
				final AdminCop tab = tabs[i];
				if(cop.name.equals(tab.name))
				{
				%>
				| <b><%=tab.name%></b><%
				}
				else
				{
				%>
				| <a href="<%=tab%>"><%=tab.name%></a><%
				}
			}
			
			%>
			</p>
			<hr><%
			cop.writeBody(out, model);
			%>
		</form>
	</body>
</html>
<%
	}
	final static void write(final PrintStream out, final PoolCounter poolCounter)
		throws IOException
	{
	final SimpleDateFormat df = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss.SSS");
	%>
	from<br><%=df.format(poolCounter.getStart())%> to<br><%=df.format(new Date())%>
	<table border="1">
		<tr>
			<th colspan="9">Connection Pool Statistics</th>
		</tr>
		<tr>
			<th>Size</th>
			<th>Loss</th>
			<th>Level</th>
			<th>-Max</th>
			<th>Get</th>
			<th>Put</th>
			<th>Create</th>
			<th>Destroy</th>
			<th></th>
		</tr><%
		for(Iterator i = poolCounter.getPools().iterator(); i.hasNext(); )
		{
			final PoolCounter.Pool pool = (PoolCounter.Pool)i.next();
		%>
		<tr>
			<td><%=pool.getSize()%></td>
			<td><%=pool.getLoss()%>%</td>
			<td><%=pool.getLevel()%></td>
			<td><%=pool.getMaxLevel()%></td>
			<td><%=pool.getGetCounter()%></td>
			<td><%=pool.getPutCounter()%></td>
			<td><%=pool.getCreateCounter()%></td>
			<td><%=pool.getDestroyCounter()%></td>
			<td><%=pool.isConsistent()%></td>
		</tr><%
		}
	%>
	</table><%
	}
}%>