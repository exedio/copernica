<?xml version="1.0"?>

<project name="cope" default="all" basedir=".">

	<property name="exedioline" value='&lt;small&gt;Copyright &amp;copy; 2004-2005 &lt;a href="http://www.exedio.com/" target="_top"&gt;exedio&lt;/a&gt; Gesellschaft f&amp;uuml;r Softwareentwicklung mbH. All rights reserved.&lt;/small&gt;&lt;!--${label}-${cvstimestamp}--&gt;' />
	
	<taskdef
			resource="net/sf/antcontrib/antcontrib.properties"
			classpath="../lib/ant-contrib.jar" />

	<target name="properties">
		<property file="../local.properties" />
		<property name="api.private" value="off" />
		<property name="api.link.jdk" value="http://java.sun.com/j2se/1.4.2/docs/api" />
		<property name="api.link.ant" value="http://searchmorph.com/pub/ant/apache-ant-1.6.2/build/javadocs" />
		<property name="api.link.j2ee" value="http://java.sun.com/j2ee/1.4/docs/api" />
	</target>

	<target name="jspm.taskdef">
		<taskdef name="jspm"
					classname="com.exedio.jspm.AntTask"
					classpath="../jspm/build/classes" />
	</target>
	
	<target name="lib.compile.mkdir">
		<mkdir dir="lib/build/classes" />
		<!-- test for cruisecontrol -->
		<echo message="test message level error"   level="error" />
		<echo message="test message level warning" level="warning" />
		<echo message="test message level info"    level="info" />
		<echo message="test message level verbose" level="verbose" />
		<echo message="test message level debug"   level="debug" />
	</target>

	<target name="dsmf.compile" depends="lib.compile.mkdir">
		<javac srcdir="dsmf/src"
				 destdir="lib/build/classes"
				 deprecation="on"
				 debug="on"
				 optimize="off" />
	</target>
	
	<target name="lib.core.compile" depends="lib.compile.mkdir, dsmf.compile">
		<javac srcdir="lib/src"
				destdir="lib/build/classes"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="../lib/pcj.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="lib.hsqldb.compile" depends="lib.compile.mkdir, lib.core.compile">
		<javac srcdir= "lib/hsqldbsrc"
				destdir="lib/build/classes"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="../lib/hsqldb.jar" />
			</classpath>
		</javac>
	</target>

	<target name="lib.oracle.compile" depends="lib.compile.mkdir, lib.core.compile">
		<javac srcdir= "lib/oraclesrc"
				destdir="lib/build/classes"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="../lib/pcj.jar" />
				<pathelement location="../lib/classes12.jar" />
			</classpath>
		</javac>
	</target>

	<target name="lib.mysql.compile" depends="lib.compile.mkdir, lib.core.compile">
		<javac srcdir= "lib/mysqlsrc"
				destdir="lib/build/classes"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="../lib/pcj.jar" />
				<pathelement location="../lib/mysql-connector-java-bin.jar" />
			</classpath>
		</javac>
	</target>

	<target name="lib.junit.compile" depends="lib.compile.mkdir, lib.core.compile">
		<javac srcdir="lib/junitsrc"
				destdir="lib/build/classes"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="../lib/junit.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="lib.compile"
				depends="lib.core.compile,
							lib.hsqldb.compile,
							lib.oracle.compile,
							lib.mysql.compile" />
	
	<target name="instrument.compile" depends="lib.compile">
		<mkdir dir="instrument/build/classes" />
		<javac srcdir="instrument/src"
				destdir="instrument/build/classes"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="lib/build/classes" />
			</classpath>
		</javac>
	</target>
	
	<target name="copernica.compile" depends="lib.compile, copernica.jspm">
		<mkdir dir="copernica/build/classes" />
		<javac srcdir="copernica/src"
				destdir="copernica/build/classes"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="lib/build/classes" />
				<pathelement location="../cops/build/classes" />
				<pathelement location="../tomcat/common/lib/servlet-api.jar" />
				<pathelement location="../tomcat/server/lib/commons-fileupload-1.0.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="compile"
				depends="lib.compile,
							instrument.compile,
							copernica.compile, copernica.test.compile" />
	
	<target name="lib.jar" depends="lib.compile">
		<jar jarfile="lib/build/exedio-cope.jar" basedir="lib/build/classes">
			<manifest>
				<attribute name="Specification-Title" value="exedio cope"/>
				<attribute name="Specification-Version" value="cruisecontrol ${label} ${cvstimestamp}"/>
				<attribute name="Specification-Vendor" value="exedio GmbH"/>
				<attribute name="Implementation-Title" value="exedio cope"/>
				<attribute name="Implementation-Version" value="cruisecontrol ${label} ${cvstimestamp}"/> 
				<attribute name="Implementation-Vendor" value="exedio GmbH"/>
			</manifest>
		</jar>
	</target>
	
	<target name="lib.test.jar" depends="lib.test.compile">
		<jar jarfile="lib/build/exedio-cope-test.jar">
			<fileset dir="lib/build/testclasses" />
			<fileset dir="lib/build/testmodelclasses" />
			<manifest>
				<attribute name="Specification-Title" value="exedio cope test"/>
				<attribute name="Specification-Version" value="cruisecontrol ${label} ${cvstimestamp}"/>
				<attribute name="Specification-Vendor" value="exedio GmbH"/>
				<attribute name="Implementation-Title" value="exedio cope test"/>
				<attribute name="Implementation-Version" value="cruisecontrol ${label} ${cvstimestamp}"/> 
				<attribute name="Implementation-Vendor" value="exedio GmbH"/>
			</manifest>
		</jar>
	</target>
	
	<target name="instrument.jar" depends="instrument.compile">
		<jar jarfile="instrument/build/exedio-cope-instrument.jar" basedir="instrument/build/classes">
			<manifest>
				<attribute name="Specification-Title" value="exedio cope instrumentor"/>
				<attribute name="Specification-Version" value="cruisecontrol ${label} ${cvstimestamp}"/>
				<attribute name="Specification-Vendor" value="exedio GmbH"/>
				<attribute name="Implementation-Title" value="exedio cope instrumentor"/>
				<attribute name="Implementation-Version" value="cruisecontrol ${label} ${cvstimestamp}"/> 
				<attribute name="Implementation-Vendor" value="exedio GmbH"/>
			</manifest>
		</jar>
	</target>
	
	<target name="copernica.jar" depends="copernica.compile">
		<jar jarfile="copernica/build/exedio-copernica.jar" basedir="copernica/build/classes">
			<manifest>
				<attribute name="Specification-Title" value="exedio copernica"/>
				<attribute name="Specification-Version" value="cruisecontrol ${label} ${cvstimestamp}"/>
				<attribute name="Specification-Vendor" value="exedio GmbH"/>
				<attribute name="Implementation-Title" value="exedio copernica"/>
				<attribute name="Implementation-Version" value="cruisecontrol ${label} ${cvstimestamp}"/> 
				<attribute name="Implementation-Vendor" value="exedio GmbH"/>
			</manifest>
		</jar>
		<zip zipfile="copernica/build/exedio-copernica-static.zip">
			<fileset dir="copernica/jsp" />
		</zip>
	</target>
	
	<target name="jar" depends="lib.jar, lib.test.jar, instrument.jar, copernica.jar" />
	
	<target name="dsmf.test.compile" depends="dsmf.compile, lib.compile">
		<mkdir dir="dsmf/build/testclasses" />
		<javac srcdir="dsmf/testsrc"
				 destdir="dsmf/build/testclasses"
				 deprecation="on"
				 debug="on"
				 optimize="off">
			<classpath>
				<pathelement location="lib/build/classes" />
				<pathelement location="../lib/junit.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="dsmf.test.run" depends="dsmf.test.compile">
		<for param="property-file">
			<path>
				<fileset dir="${basedir}" includes="cope.properties.test.*" />
			</path>
			<sequential>
				<echo message="Testing @{property-file}" />
				<property file="@{property-file}" prefix="@{property-file}." />
				<java classname="junit.textui.TestRunner" taskname="junit ${@{property-file}.database}" fork="yes" failonerror="yes">
					<classpath>
						<pathelement location="lib/build/classes" />
						<pathelement location="dsmf/build/testclasses" />
						<pathelement location="../lib/junit.jar" />
						<pathelement location="../lib/${@{property-file}.x-build.driver}" />
					</classpath>
					<arg value="com.exedio.dsmf.PackageTest" />
					<sysproperty key="com.exedio.cope.properties" file="@{property-file}" />
				</java>
			</sequential>
		</for>
	</target>
	
	<target name="dsmf.test" depends="dsmf.test.run" />
	
	<target name="instrument.taskdef" depends="lib.compile, instrument.compile">
		<taskdef name="instrument" classname="com.exedio.cope.instrument.AntTask">
			<classpath>
				<pathelement location="../lib/pcj.jar" />
				<pathelement location="lib/build/classes" />
				<pathelement location="instrument/build/classes" />
			</classpath>
		</taskdef>
	</target>
	
	<target name="lib.testmodel.instrument" depends="instrument.taskdef">
		<instrument>
			<filelist dir="lib/testmodelsrc/com/exedio/cope/testmodel" files="
				ItemWithSingleUnique.java,
				ItemWithSingleUniqueReadOnly.java,
				ItemWithSingleUniqueNotNull.java,
				ItemWithDoubleUnique.java,
				EmptyItem.java,
				EmptyItem2.java,
				AttributeEmptyItem.java,
				AttributeItem.java,
				StringItem.java,
				DataItem.java,
				SumItem.java,
				VectorItem.java,
				PointerItem.java,
				PointerItem2.java,
				QualifiedEmptyQualifier.java,
				QualifiedStringQualifier.java,
				QualifiedIntegerEnumQualifier.java,
				QualifiedItem.java,
				Super.java,
				FirstSub.java,
				SecondSub.java,
				CollisionItem1.java,
				CollisionItem2.java" />
		</instrument>
	</target>
	
	<target name="lib.testmodel.compile" depends="lib.testmodel.instrument">
		<mkdir dir="lib/build/testmodelclasses" />
		<javac srcdir="lib/testmodelsrc"
				destdir="lib/build/testmodelclasses"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="lib/build/classes" />
			</classpath>
		</javac>
	</target>
	
	<target name="lib.test.compile"
				depends="lib.testmodel.compile, lib.junit.compile">
		<mkdir dir="lib/build/testclasses" />
		<javac srcdir="lib/testsrc"
				destdir="lib/build/testclasses"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="lib/build/classes" />
				<pathelement location="lib/build/testmodelclasses" />
				<pathelement location="../lib/junit.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="lib.test.run" depends="lib.test.compile">
		<for param="property-file">
			<path>
				<fileset dir="${basedir}" includes="cope.properties.test.*" />
			</path>
			<sequential>
				<echo message="Testing @{property-file}" />
				<property file="@{property-file}" prefix="@{property-file}." />
				<mkdir dir="lib/build/test.${@{property-file}.database}/data" />
				<copy file="@{property-file}"
						tofile="lib/build/test.${@{property-file}.database}/cope.properties">
					<filterset>
						<filter token="DATADIR_PATH" value="lib/build/test.${@{property-file}.database}/data" />
					</filterset>
				</copy>
				<java classname="junit.textui.TestRunner" taskname="junit ${@{property-file}.database}" fork="yes" failonerror="yes">
					<classpath>
						<pathelement location="lib/build/classes" />
						<pathelement location="lib/build/testmodelclasses" />
						<pathelement location="lib/build/testclasses" />
						<pathelement location="../lib/junit.jar" />
						<pathelement location="../lib/pcj.jar" />
						<pathelement location="../lib/${@{property-file}.x-build.driver}" />
					</classpath>
					<arg value="com.exedio.cope.PackageTest" />
					<sysproperty key="com.exedio.cope.properties" file="lib/build/test.${@{property-file}.database}/cope.properties" />
				</java>
			</sequential>
		</for>
	</target>
	
	<target name="lib.test" depends="lib.test.run" />

	<target name="lib.test.teardown" depends="lib.compile, lib.testmodel.compile">
		<for param="property-file">
			<path>
				<fileset dir="${basedir}" includes="cope.properties.test.*" />
			</path>
			<sequential>
				<echo message="Tearing down @{property-file}" />
				<property file="@{property-file}" prefix="@{property-file}." />
				
				<mkdir dir="lib/build/teardown.${@{property-file}.database}/data" />
				<copy file="@{property-file}"
						tofile="lib/build/teardown.${@{property-file}.database}/cope.properties">
					<filterset>
						<filter token="DATADIR_PATH"
								  value="lib/build/teardown.${@{property-file}.database}/data" />
					</filterset>
				</copy>
				<java classname="com.exedio.cope.testmodel.Main" taskname="tear down ${@{property-file}.database}"
						fork="yes" failonerror="yes">
					<classpath>
						<pathelement location="lib/build/classes" />
						<pathelement location="lib/build/testmodelclasses" />
						<pathelement location="../lib/pcj.jar" />
						<pathelement location="../lib/${@{property-file}.x-build.driver}" />
					</classpath>
					<sysproperty key="com.exedio.cope.properties"
									 file="lib/build/teardown.${@{property-file}.database}/cope.properties" />
				</java>
				
			</sequential>
		</for>
	</target>

	<target name="teardown" depends="lib.test.teardown" />


	<target name="instrument.test.instrument" depends="instrument.taskdef">
		<instrument>
			<filelist dir="instrument/testsrc/com/exedio/cope/instrument/testmodel" files="
				Standard.java,
				TypePrivate.java,
				TypeNone.java" />
		</instrument>
	</target>
	
	<target name="instrument.test.compile" depends="instrument.test.instrument, lib.compile, instrument.compile">
		<mkdir dir="instrument/build/testclasses" />
		<javac srcdir="instrument/testsrc"
				destdir="instrument/build/testclasses"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="lib/build/classes" />
				<pathelement location="instrument/build/classes" />
				<pathelement location="../lib/junit.jar" />
			</classpath>
		</javac>
		<copy
			file="instrument/testsrc/com/exedio/cope/instrument/Example.java"
			todir="instrument/build/testclasses/com/exedio/cope/instrument" />
	</target>
	
	<target name="instrument.test.run"
				depends="lib.compile, instrument.compile, instrument.test.compile">
		<java classname="junit.textui.TestRunner" taskname="junit" fork="yes" failonerror="yes">
			<classpath>
				<pathelement location="lib/build/classes" />
				<pathelement location="instrument/build/classes" />
				<pathelement location="instrument/build/testclasses" />
				<pathelement location="../lib/junit.jar" />
				<pathelement location="../lib/pcj.jar" />
			</classpath>
			<arg value="com.exedio.cope.instrument.PackageTest" />
		</java>
	</target>
	
	<target name="instrument.test" depends="instrument.test.run" />
	
	<target name="test" depends="dsmf.test, lib.test, instrument.test" />
	
	
	<target name="copernica.jspm" depends="jspm.taskdef">
		<jspm>
			<fileset dir="copernica/src" includes="**/*.jspm" />
		</jspm>
	</target>
	
	<target name="copernica.test.jspm" depends="jspm.taskdef">
		<jspm>
			<fileset dir="copernica/testsrc" includes="**/*.jspm" />
		</jspm>
	</target>
	
	<target name="copernica.test.compile"
				depends="lib.compile, lib.test.compile, copernica.compile, copernica.test.jspm">
		<mkdir dir="copernica/build/testclasses" />
		<javac srcdir="copernica/testsrc"
				destdir="copernica/build/testclasses"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<pathelement location="lib/build/classes" />
				<pathelement location="lib/build/testmodelclasses" />
				<pathelement location="copernica/build/classes" />
				<pathelement location="../cops/build/classes" />
				<pathelement location="../lib/junit.jar" />
				<pathelement location="../tomcat/common/lib/servlet-api.jar" />
			</classpath>
		</javac>
		<copy todir="copernica/build/testclasses/com/exedio/copernica">
			<fileset dir="copernica/testresources" />
		</copy>
	</target>
	
	<target name="copernica.testwebapp" depends="copernica.compile, copernica.test.compile">
		<for param="property-file">
			<path>
				<fileset dir="${basedir}" includes="cope.properties.test.*" />
			</path>
			<sequential>
				<echo message="Using @{property-file}" />
				<property file="@{property-file}" prefix="@{property-file}." />
				
				<mkdir dir="copernica/build/testwebapp-${@{property-file}.database}" />
				
				<copy todir="copernica/build/testwebapp-${@{property-file}.database}/WEB-INF/classes">
					<fileset dir="lib/build/classes" />
					<fileset dir="lib/build/testmodelclasses" />
					<fileset dir="copernica/build/classes" />
					<fileset dir="copernica/build/testclasses" />
					<fileset dir="../cops/build/classes" />
				</copy>
				
				<copy todir="copernica/build/testwebapp-${@{property-file}.database}/WEB-INF/lib">
					<fileset file="../lib/pcj.jar" />
					<fileset file="../lib/${@{property-file}.x-build.driver}" />
				</copy>
				
				<copy tofile="copernica/build/testwebapp-${@{property-file}.database}/WEB-INF/cope.properties"
						file="@{property-file}">
					<filterset>
						<filter token="DATADIR_PATH" value="//WEB-APP//" />
					</filterset>
				</copy>
				<copy todir="copernica/build/testwebapp-${@{property-file}.database}/WEB-INF/"
						file="copernica/web.xml" />
				<copy todir="copernica/build/testwebapp-${@{property-file}.database}">
					<fileset dir="copernica/jsp">
						<exclude name="*.jsp" />
						<exclude name="*.inc" />
					</fileset>
				</copy>
				<mkdir dir="copernica/build/testwebapp-${@{property-file}.database}/data" />
				<copy tofile="../tomcat/conf/Catalina/localhost/copetest-${@{property-file}.database}.xml"
						file="copernica/copetest.xml">
					<filterset>
						<filter token="DATABASE" value="${@{property-file}.database}" />
					</filterset>
				</copy>
				
				<touch file="copernica/build/testwebapp-${@{property-file}.database}/WEB-INF/web.xml" />
			</sequential>
		</for>
	</target>
	
	
	<target name="copernica.webtest.compile">
		<mkdir dir="copernica/build/webtestclasses" />
		<javac srcdir="copernica/webtestsrc"
				destdir="copernica/build/webtestclasses"
				deprecation="on"
				debug="on"
				optimize="off">
			<classpath>
				<fileset dir="../lib/jwebunit"> 
					<include name="*.jar" /> 
				</fileset> 
			</classpath>
		</javac>
	</target>
	
	<target name="copernica.webtest" depends="copernica.webtest.compile">
		<java classname="junit.textui.TestRunner" taskname="jwebunit"
				failonerror="yes" fork="yes">
			<classpath>
				<pathelement location="copernica/build/webtestclasses" />
				<fileset dir="../lib/jwebunit"> 
					<include name="*.jar" /> 
				</fileset> 
			</classpath>
			<arg value="com.exedio.copernica.PackageTest" />
		</java>
	</target>

	<target name="webtest" depends="copernica.webtest" />
	
	<target name="copernica" depends="copernica.compile" />
	
	<target name="lib.clean">
		<delete dir="lib/build" />
	</target>

	<target name="instrument.clean">
		<delete dir="instrument/build" />
	</target>

	<target name="copernica.clean">
		<delete dir="copernica/build" />
		<delete>
			<fileset dir="copernica/src">
				<include name="**/*_Jspm.java" />
			</fileset>
			<fileset dir="copernica/testsrc">
				<include name="**/*_Jspm.java" />
			</fileset>
		</delete>
	</target>

	<target name="clean" depends="lib.clean, instrument.clean, copernica.clean" />
	
	
	<target name="dsmf.api" depends="properties">
		
		<delete dir="dsmf/api" />
		<mkdir  dir="dsmf/api" />
		
		<javadoc
				  sourcepath="dsmf/src"
				  destdir="dsmf/api"
				  maxmemory="60m"
				  private="${api.private}"
				  author="on"
				  use="on"
				  version="on"
				  windowtitle="Database Schema Management Facility"
				  doctitle=   "Database Schema Management Facility&lt;br&gt;API Specification"
				  header=     "DSMF"
				  footer=     "Database Schema&lt;br&gt;Management Facility"
				  splitindex="on"
				  bottom="${exedioline}"
				  >
			<package name="com.*" />
			<link href="${api.link.jdk}" />
		</javadoc>
	</target>
	
	<target name="lib.api" depends="properties">

		<delete dir="lib/api" />
		<mkdir  dir="lib/api" />

		<javadoc
				sourcepath="lib/src"
				destdir="lib/api"
				maxmemory="60m"
				private="${api.private}"
				author="on"
				use="on"
				version="on"
				windowtitle="Cope with Object Persistence"
				doctitle=   "Cope with Object Persistence&lt;br&gt;API Specification"
				header=     "COPE"
				footer=     "Cope with&lt;br&gt;Object&lt;br&gt;Persistence"
				splitindex="on"
				bottom="${exedioline}"
			>
			<package name="com.*" />
			<link href="../../dsmf/api" />
			<link href="${api.link.jdk}" />
			<classpath>
				<pathelement location="lib/build/classes" /><!-- for dsmf -->
				<pathelement location="../lib/pcj.jar" />
			</classpath>
		</javadoc>
	</target>

	<target name="instrument.api" depends="properties">

		<delete dir="instrument/api" />
		<mkdir  dir="instrument/api" />

		<javadoc
				sourcepath="instrument/src"
				destdir="instrument/api"
				maxmemory="60m"
				private="${api.private}"
				author="on"
				use="on"
				version="on"
				windowtitle="Cope with Object Persistence"
				doctitle=   "Cope with Object Persistence&lt;br&gt;API Specification"
				header=     "COPE&lt;br&gt;Instrumentor"
				footer=     "Cope with&lt;br&gt;Object&lt;br&gt;Persistence"
				splitindex="on"
				bottom="${exedioline}"
			>
			<package name="com.*" />
			<link href="../../lib/api" />
			<link href="${api.link.jdk}" />
			<link href="${api.link.ant}" />
			<classpath>
				<pathelement location="lib/build/classes" />
				<pathelement location="../tomcat/common/lib/ant.jar" />
			</classpath>
		</javadoc>
	</target>

	<target name="copernica.api" depends="properties">

		<delete dir="copernica/api" />
		<mkdir  dir="copernica/api" />

		<javadoc
				sourcepath="copernica/src"
				destdir="copernica/api"
				maxmemory="60m"
				private="${api.private}"
				author="on"
				use="on"
				version="on"
				windowtitle="Copernica"
				doctitle=   "Copernica&lt;br&gt;API Specification"
				header=     "Copernica"
				footer=     "Cope with&lt;br&gt;Object&lt;br&gt;Persistence"
				splitindex="on"
				bottom="${exedioline}"
			>
			<package name="com.*" />
			<link href="../../lib/api" />
			<link href="../../../cops/api" />
			<link href="${api.link.jdk}" />
			<link href="${api.link.j2ee}" />
			<classpath>
				<pathelement location="lib/build/classes" />
				<pathelement location="../cops/build/classes" />
				<pathelement location="../tomcat/common/lib/servlet-api.jar" />
				<pathelement location="../tomcat/server/lib/commons-fileupload-1.0.jar" />
			</classpath>
		</javadoc>
	</target>

	<target name="api" depends="dsmf.api, lib.api, instrument.api, copernica.api" />
	
	<target name="jspm" depends="copernica.jspm, copernica.test.jspm" />
	
	<target name="all"
			depends="compile, test, jar, api,
						copernica.testwebapp,
						copernica.webtest.compile" />

</project>
